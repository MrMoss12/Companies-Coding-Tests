Problema
Tenemos un arreglo que representa una fila de asientos en un teatro:

seats[i] = 1 representa que una persona está sentada en el asiento i.
seats[i] = 0 representa que el asiento i está vacío.
Queremos encontrar un asiento vacío (0) de manera que la distancia a la persona más cercana sea la máxima posible.

Entradas y Salidas
Entrada: Un arreglo de enteros (0s y 1s) que representa los asientos.
Salida: Un entero que representa la distancia máxima a la persona más cercana.

ENTRADA
1000

SALIDA 
3

Explicación del Ejemplo
En el ejemplo dado:

El arreglo de asientos es [1, 0, 0, 0].
La mejor opción para sentarse es en el último asiento (índice 3), ya que la distancia a la persona más cercana (en el índice 0) es 3.

Algoritmo de Solución
Para resolver este problema, podemos seguir estos pasos:

1.Identificar las posiciones de las personas: Recorremos el arreglo y guardamos las posiciones de los 1s en una lista.
2.Calcular la distancia máxima en los extremos:
La distancia desde el primer asiento vacío hasta el primer 1.
La distancia desde el último asiento vacío hasta el último 1.
3.Calcular las distancias en los intervalos entre personas:
Para cada par de personas consecutivas, calculamos la distancia máxima que se puede tener si nos sentamos en la mitad del intervalo entre ellos.
4.Determinar la distancia máxima:
Comparamos las distancias obtenidas en los pasos anteriores y seleccionamos la mayor.

